image: docker:24.0.5

services:
  - docker:24.0.5-dind

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_VERIFY: "1"
  DOCKER_CERT_PATH: "/certs/client"

before_script:
  - apk add --no-cache curl
  - curl -L "https://github.com/docker/compose/releases/download/2.27.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  - chmod +x /usr/local/bin/docker-compose


stages:
  - build
  - test
  - lint
  - deploy

build:
  stage: build
  script:
    - docker-compose build

test:
  stage: test
  image: python:3.12-alpine3.18
  services:
    - name: postgres:15-alpine3.18
      alias: db
      command: [ "postgres" ]
      entrypoint: [ "/docker-entrypoint.sh" ]
      environment:
        - POSTGRES_DB=devdb
        - POSTGRES_USER=devuser
        - POSTGRES_PASSWORD=dbpass
    - redis:7.0.15-alpine

  script:
    - docker-compose up -d
    - docker-compose run --rm socmedapi sh -c "/scripts/wait-for-it.sh db:5432 -- python manage.py test"

lint:
  stage: lint
  image: python:3.12-alpine3.18
  script:
    - docker-compose run --rm socmedapi sh -c "flake8"
    - docker-compose down

deploy:
  stage: deploy
  script:
    - docker-compose up -d
  only:
    - main